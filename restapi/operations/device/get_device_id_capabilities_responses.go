package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kubeIoT/api-docs/models"
)

/*GetDeviceIDCapabilitiesOK List of all capabilities on device

swagger:response getDeviceIdCapabilitiesOK
*/
type GetDeviceIDCapabilitiesOK struct {
	/*
	  In: Body
	*/
	Payload []*models.DeviceCapability `json:"body,omitempty"`
}

// NewGetDeviceIDCapabilitiesOK creates GetDeviceIDCapabilitiesOK with default headers values
func NewGetDeviceIDCapabilitiesOK() *GetDeviceIDCapabilitiesOK {
	return &GetDeviceIDCapabilitiesOK{}
}

// WithPayload adds the payload to the get device Id capabilities o k response
func (o *GetDeviceIDCapabilitiesOK) WithPayload(payload []*models.DeviceCapability) *GetDeviceIDCapabilitiesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device Id capabilities o k response
func (o *GetDeviceIDCapabilitiesOK) SetPayload(payload []*models.DeviceCapability) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceIDCapabilitiesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.DeviceCapability, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetDeviceIDCapabilitiesForbidden User is not authorized to list device capabilities

swagger:response getDeviceIdCapabilitiesForbidden
*/
type GetDeviceIDCapabilitiesForbidden struct {
	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDeviceIDCapabilitiesForbidden creates GetDeviceIDCapabilitiesForbidden with default headers values
func NewGetDeviceIDCapabilitiesForbidden() *GetDeviceIDCapabilitiesForbidden {
	return &GetDeviceIDCapabilitiesForbidden{}
}

// WithPayload adds the payload to the get device Id capabilities forbidden response
func (o *GetDeviceIDCapabilitiesForbidden) WithPayload(payload *models.Error) *GetDeviceIDCapabilitiesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device Id capabilities forbidden response
func (o *GetDeviceIDCapabilitiesForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceIDCapabilitiesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetDeviceIDCapabilitiesNotFound Device was not found

swagger:response getDeviceIdCapabilitiesNotFound
*/
type GetDeviceIDCapabilitiesNotFound struct {
	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDeviceIDCapabilitiesNotFound creates GetDeviceIDCapabilitiesNotFound with default headers values
func NewGetDeviceIDCapabilitiesNotFound() *GetDeviceIDCapabilitiesNotFound {
	return &GetDeviceIDCapabilitiesNotFound{}
}

// WithPayload adds the payload to the get device Id capabilities not found response
func (o *GetDeviceIDCapabilitiesNotFound) WithPayload(payload *models.Error) *GetDeviceIDCapabilitiesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device Id capabilities not found response
func (o *GetDeviceIDCapabilitiesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceIDCapabilitiesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
