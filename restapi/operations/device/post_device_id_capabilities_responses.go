package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kubeIoT/api-docs/models"
)

/*PostDeviceIDCapabilitiesCreated Capability was added to device

swagger:response postDeviceIdCapabilitiesCreated
*/
type PostDeviceIDCapabilitiesCreated struct {
	/*
	  In: Body
	*/
	Payload *models.DeviceCapability `json:"body,omitempty"`
}

// NewPostDeviceIDCapabilitiesCreated creates PostDeviceIDCapabilitiesCreated with default headers values
func NewPostDeviceIDCapabilitiesCreated() *PostDeviceIDCapabilitiesCreated {
	return &PostDeviceIDCapabilitiesCreated{}
}

// WithPayload adds the payload to the post device Id capabilities created response
func (o *PostDeviceIDCapabilitiesCreated) WithPayload(payload *models.DeviceCapability) *PostDeviceIDCapabilitiesCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post device Id capabilities created response
func (o *PostDeviceIDCapabilitiesCreated) SetPayload(payload *models.DeviceCapability) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDeviceIDCapabilitiesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostDeviceIDCapabilitiesNotFound Capability was not found

swagger:response postDeviceIdCapabilitiesNotFound
*/
type PostDeviceIDCapabilitiesNotFound struct {
	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostDeviceIDCapabilitiesNotFound creates PostDeviceIDCapabilitiesNotFound with default headers values
func NewPostDeviceIDCapabilitiesNotFound() *PostDeviceIDCapabilitiesNotFound {
	return &PostDeviceIDCapabilitiesNotFound{}
}

// WithPayload adds the payload to the post device Id capabilities not found response
func (o *PostDeviceIDCapabilitiesNotFound) WithPayload(payload *models.Error) *PostDeviceIDCapabilitiesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post device Id capabilities not found response
func (o *PostDeviceIDCapabilitiesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDeviceIDCapabilitiesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
