package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteImageIDHandlerFunc turns a function with the right signature into a delete image ID handler
type DeleteImageIDHandlerFunc func(DeleteImageIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteImageIDHandlerFunc) Handle(params DeleteImageIDParams) middleware.Responder {
	return fn(params)
}

// DeleteImageIDHandler interface for that can handle valid delete image ID params
type DeleteImageIDHandler interface {
	Handle(DeleteImageIDParams) middleware.Responder
}

// NewDeleteImageID creates a new http.Handler for the delete image ID operation
func NewDeleteImageID(ctx *middleware.Context, handler DeleteImageIDHandler) *DeleteImageID {
	return &DeleteImageID{Context: ctx, Handler: handler}
}

/*DeleteImageID swagger:route DELETE /image/{id} image deleteImageId

Deletes the imag

*/
type DeleteImageID struct {
	Context *middleware.Context
	Handler DeleteImageIDHandler
}

func (o *DeleteImageID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDeleteImageIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil {
		// bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
