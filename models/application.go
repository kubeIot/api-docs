package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// Application application
// swagger:model application
type Application struct {
	// base image
	BaseImage int64 `json:"base_image,omitempty"`

	// Used capabilities on the device
	Capabilities []int64 `json:"capabilities"`

	// The id of parent device
	DeviceID int64 `json:"device_id,omitempty"`

	// id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// ports
	Ports []string `json:"ports"`

	// Ip of kubernetes service
	ServiceIP string `json:"service_ip,omitempty"`

	// status
	Status int64 `json:"status,omitempty"`

	// status message
	StatusMessage string `json:"status_message,omitempty"`
}

// Validate validates this application
func (m *Application) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCapabilities(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePorts(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Application) validateCapabilities(formats strfmt.Registry) error {

	if swag.IsZero(m.Capabilities) {
		// not required
		return nil
	}

	return nil
}

func (m *Application) validatePorts(formats strfmt.Registry) error {

	if swag.IsZero(m.Ports) {
		// not required
		return nil
	}

	return nil
}
